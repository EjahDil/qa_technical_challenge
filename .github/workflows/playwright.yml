# name: Playwright Tests
# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-node@v4
#       with:
#         node-version: lts/*
#     - name: Install dependencies
#       run: npm ci
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps
#     - name: Run Playwright tests
#       run: npx playwright test
#     - uses: actions/upload-artifact@v4
#       if: ${{ !cancelled() }}
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30



name: Playwright Automation Tests

on:
  push:
    branches:
      - main  # Trigger the action when there is a push to the main branch

jobs:
  playwright-tests:
    runs-on: ubuntu-latest  # This specifies the runner environment

    steps:
      # Checkout the repository to the GitHub runner
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  # The workflow will use the most stable version of node.js

      # Install dependencies
      - name: Install dependencies
        run: |
          npm ci  #  `npm ci` command to install dependencies needed to run the playwright test
          
      # Install Playwright dependencies (e.g., for browser installations)
      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps  # Install the necessary browsers for Playwright tests with all the require

      # Run Playwright tests
      - name: Run Playwright tests
        run: |
          npx playwright test tests/end-to-end

      # Upload test results 
      - name: Upload HTML report
        if: always()  # Always runs, even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: playwright-html-report
          path: playwright-report/    # The folder that will contain the generated html report.

    move-artifact-to-repo:
          runs-on: ubuntu-latest
          needs: playwright-tests

          steps:
            # Checkout the repository to the GitHub runner
            - name: Checkout repository
              uses: actions/checkout@v3

            # Download the artifact
            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                name: playwright-html-report
                path: temp-artifact  # Temporary folder for artifact extraction

                   # Overwrite only HTML files in the existing folder
            - name: Move HTML report to existing folder
              run: |
                    # Ensure that the directory exists and handle special characters in the path
                    mkdir -p "QaChallengeTasks & htmlTestReport"
                    cp temp-artifact/*.html "QaChallengeTasks & htmlTestReport/"


          # Commit and push the updated report to the repository
          - name: Commit and push updated report
            run: |
              git config user.name "GitHub Actions"
              git config user.email "actions@github.com"
              git add "QaChallengeTasks & htmlTestReport/"
              git commit -m "Update Playwright HTML report from artifact [CI]"
              git push
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}